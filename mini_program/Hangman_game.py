import random
import time

print('''
      ПРАВИЛА:
      Программа загадывает слово, а пользователь должен его угадать. Изначально все буквы слова неизвестны. 
      Также рисуется виселица с петлей. Пользователь предлагает букву, которая может входить в это слово. 
      Если такая буква есть в слове, то программа ставит букву столько раз, сколько она встречается в слове. 
      Если такой буквы нет, к виселице добавляется круг в петле, изображающий голову. 
      Пользователь продолжает отгадывать буквы до тех пор, пока не отгадает всё слово. 
      За каждую неудачную попытку добавляется еще одна часть туловища висельника (обычно их 6: голова, туловище, 2 руки и 2 ноги.
      Если попытаться угадать слово целиком и ошибиться - то вы проиграете!
      ''')

# слова, которые будут использоваться в игре
word_list = ['КЛЮЧ', 'КНИГА', 'ЕНОТ', 'МАШИНКА', 'КОРОВА', 'ТЕЛЕЖКА', 'ШЛЕМ', 'КНОПКА', 'ШНУР', 'ЧЕРНЫЙ',
             'ВЛАСТЕЛИН', 'СКАЙП', 'ДУБ', 'ЧАСЫ', 'ТРУБА', 'ЕЛКА', 'ИНСТИТУТ', 'КОРОБКА', 'ТАБЛИЧКА', 'ВОДА',
             'СКОВОРОДА',
             'МНОГОНОЖКА', 'ЕВРЕЙ', 'ТЕРМИТ', 'КАЧЕК', 'РУЛОН', 'МАГНИТОФОН', 'НОГА', 'СЛОН', 'МИКРОВОЛНОВКА', 'ТОРТ',
             'МАК',
             'ДЫМ', 'ЧАЙКА', 'ВАЛЕТ', 'ПЛИНТУС', 'ШАПКА', 'ДИНОЗАВР', 'ТОРШЕР', 'БАЛАЛАЙКА', 'БАНКА', 'ЯХТА', 'ОВЦА',
             'БАНАН',
             'ДУБ', 'АНИМЕ', 'РАДУГА', 'БУКВА', 'ВЕЛОСИПЕД', 'БАНДЖО', 'ГОЛУБЬ', 'ВИНТОВКА', 'КУБОК', 'ЖАСМИН',
             'ТЕЛЕФОН',
             'АНДРОИД', 'ГОРА', 'ХАЛАТ', 'ЖЕТОН', 'ОБОД', 'МЫЛО', 'ЙОГ', 'ШИШКА', 'ДОЛЛАР', 'КОЛОНКА', 'КУБИК', 'ОМАР',
             'РАКЕТА', 'МОРКОВКА', 'ЗЕРКАЛО', 'МОЛОТ', 'ВОЗДУХ', 'ЗМЕЙ', 'ЁЖ', 'ПАЛЬМА', 'МАСЛО', 'ДИДЖЕЙ', 'МЕШОК',
             'ТЮБИК',
             'МОЗГ', 'ПОЕЗД', 'РОЗЕТКА', 'ПАРАШЮТИСТ', 'БЕЛКА', 'ШПРОТЫ', 'САМОСВАЛ', 'ПАЗЛ', 'БУТЫЛКА', 'КРЕМЛЬ',
             'ПИЦЦА',
             'МАКАРОНЫ', 'КОВЕР', 'ЗУБЫ', 'ЯРЛЫК', 'КАШАЛОТ', 'МАРС', 'ШАКАЛ', 'ПОМАДА', 'ДЖИП', 'ЛЕЩ', 'КАМЕНЬ',
             'ДИСК']


def get_word():
    '''
    Функция возвращает случайное слово из
    word_list в верхнем регистре
    '''
    word = random.choice(word_list)
    return word


def display_hangman(tries):
    '''
    Функция возвращает текущее состояние игры в графическом виде
    tries:
    tries = 6 соответствует начальному положению, пустая висилица
    tries = 0 соответствует проигрышу и полностью нарисованному телу повешенного
    '''
    stages = [  # финальное состояние: голова, торс, обе руки, обе ноги
        '''
           --------
           |      |
           |      O
           |     \\|/
           |      |
           |     / \\
           -
        Я выиграл!!! Game over!!!
        ''',
        # голова, торс, обе руки, одна нога
        '''
           --------
           |      |
           |      O
           |     \\|/
           |      |
           |     / 
           -
        У тебя осталась 1 попытка - шанса на ошибку нет!!!
        ''',
        # голова, торс, обе руки
        '''
           --------
           |      |
           |      O
           |     \\|/
           |      |
           |      
           -
        У тебя осталось 2 попытки
        ''',
        # голова, торс и одна рука
        '''
           --------
           |      |
           |      O
           |     \\|
           |      |
           |     
           -
        У тебя осталось 3 попытки
        ''',
        # голова и торс
        '''
           --------
           |      |
           |      O
           |      |
           |      |
           |     
           -
        У тебя осталось 4 попытки
        ''',
        # голова
        '''
           --------
           |      |
           |      O
           |    
           |      
           |     
           -
        У тебя осталось 5 попыток
        ''',
        # начальное состояние
        '''
           --------
           |      |
           |      
           |    
           |      
           |     
           -
        У тебя осталось 6 попыток
        '''
    ]
    return stages[tries]


def check_letter(letter):
    flag = False
    for i in letter:
        if i.isalpha():
            flag = True
        else:
            return False
    if flag:
        return True


def replace_letter(letter, word_completion, word):
    word_completion = list(word_completion)
    for i in range(len(word)):
        if word[i] == letter:
            word_completion[i] = letter
    return ''.join(word_completion)


def play_game(word):
    '''
     Основная программа
     Функция play() принимает в качестве аргумента слово word, сгенерированное функцией  get_word()
    '''
    word_completion = '_' * len(word)  # строка, содержащая символы _ на каждую букву задуманного слова
    flag = True  # сигнальная метка
    guessed_letters = []  # список уже названных букв
    guessed_words = []  # список уже названных слов
    tries = 6  # количество попыток

    name = input('Как вас зовут? ')
    print(f'Привет {name.title()}! Давай сыграем в игру "Угадайка"')
    time.sleep(1)
    print('Я загадал слово - Начинаем!')
    print(display_hangman(tries))  # отобразим начальное состояние игры
    print(word_completion)  # отобразим начальное слово

    while '_' in word_completion and flag:
        print(f'Мое слово: {word_completion}')
        question = input('Хотите ввести слово полностью? (да/нет): ')
        if question == 'да':
            word_user = input('Введите слово: ').upper()
            if check_letter(word_user):
                if word_user == word:
                    time.sleep(1)
                    print('Поздравляю!!! Вы угадали слово!')
                    print()
                    new_game = input('Хотите еще сыграть? (да/нет): ')
                    if new_game == 'да':
                        play_game(get_word())
                    else:
                        return 'Тогда до встречи!'
                else:
                    print(f'К сожалению, вы не угадали слово! Это {word.upper()}')
                    time.sleep(1)
                    print(display_hangman(tries=0))
                    print()
                    new_game = input('Хотите еще сыграть? (да/нет): ')
                    if new_game == 'да':
                        play_game(get_word())
                    else:
                        return 'Тогда до встречи!'
            else:
                print('Вы ошиблись в символах, введите слово из букв!')
        else:
            letter = input('Введите букву: ').upper()
            if check_letter(letter):
                if letter not in guessed_letters:
                    guessed_letters.append(letter)
                    if letter in word:
                        print('Вы угадали букву')
                        word_completion = replace_letter(letter, word_completion, word)
                        print()
                        print(replace_letter(letter, word_completion, word))
                    else:
                        print('Вы ошиблись, такой буквы нет!')
                        time.sleep(1)
                        tries -= 1
                        if tries == 0:
                            flag = False
                        else:
                            print()
                            print(display_hangman(tries))
                else:
                    print('Вы уже вводили такую букву')
                    continue
            else:
                print('Введите только букву!')
    if flag:
        print('Поздравляю!!! Вы угадали слово!')
        print()
    else:
        print(f'К сожалению, вы не угадали слово! Это {word.upper()}')
        print(display_hangman(tries=0))
    new_game = input('Хотите еще сыграть? (да/нет): ')
    if new_game == 'да':
        play_game(get_word())
    else:
        return 'Тогда до встречи!'


play_game(get_word())